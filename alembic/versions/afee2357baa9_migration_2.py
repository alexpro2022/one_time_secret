"""migration â„–2

Revision ID: afee2357baa9
Revises: e66e3cedaab1
Create Date: 2025-04-06 14:59:11.742140

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "afee2357baa9"
down_revision: str | None = "e66e3cedaab1"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "log",
        sa.Column("client_info", sa.String(), nullable=False),
        sa.Column("secret_id", sa.Uuid(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("created", "read", "deleted", name="secretstatus"),
            nullable=False,
        ),
        sa.Column("event_time", sa.DateTime(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_log")),
    )
    with op.batch_alter_table("secret", schema=None) as batch_op:
        batch_op.alter_column("ttl_seconds", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("secret", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )
        batch_op.alter_column("ttl_seconds", existing_type=sa.INTEGER(), nullable=True)

    op.drop_table("log")
    # ### end Alembic commands ###
